//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Zelda.ItemCreator.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Zelda.ItemCreator.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string ButtonText_Cancel {
            get {
                return ResourceManager.GetString("ButtonText_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        public static string ButtonText_OK {
            get {
                return ResourceManager.GetString("ButtonText_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selection Dialog.
        /// </summary>
        public static string DialogTitle_Selection {
            get {
                return ResourceManager.GetString("DialogTitle_Selection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item resources (*.zitm)|*.zitm|Set resources (*.zset)|*.zset.
        /// </summary>
        public static string Filter_Item {
            get {
                return ResourceManager.GetString("Filter_Item", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sprite - binary resources (*.xnb)|*.xnb.
        /// </summary>
        public static string Filter_Sprite {
            get {
                return ResourceManager.GetString("Filter_Sprite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The item &apos;{0}&apos; has been saved successfully..
        /// </summary>
        public static string Info_ItemXSavedSuccessfully {
            get {
                return ResourceManager.GetString("Info_ItemXSavedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resaved all items..
        /// </summary>
        public static string Info_ResavedAllItems {
            get {
                return ResourceManager.GetString("Info_ResavedAllItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit.
        /// </summary>
        public static string MenuHeader_Exit {
            get {
                return ResourceManager.GetString("MenuHeader_Exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List Drop Locations.
        /// </summary>
        public static string MenuHeader_ListDropLocations {
            get {
                return ResourceManager.GetString("MenuHeader_ListDropLocations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modify Item Cost.
        /// </summary>
        public static string MenuHeader_ModifyItemCost {
            get {
                return ResourceManager.GetString("MenuHeader_ModifyItemCost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New.
        /// </summary>
        public static string MenuHeader_New {
            get {
                return ResourceManager.GetString("MenuHeader_New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Equipment.
        /// </summary>
        public static string MenuHeader_NewEquipment {
            get {
                return ResourceManager.GetString("MenuHeader_NewEquipment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gem.
        /// </summary>
        public static string MenuHeader_NewGem {
            get {
                return ResourceManager.GetString("MenuHeader_NewGem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item.
        /// </summary>
        public static string MenuHeader_NewItem {
            get {
                return ResourceManager.GetString("MenuHeader_NewItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set.
        /// </summary>
        public static string MenuHeader_NewSet {
            get {
                return ResourceManager.GetString("MenuHeader_NewSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Weapon.
        /// </summary>
        public static string MenuHeader_NewWeapon {
            get {
                return ResourceManager.GetString("MenuHeader_NewWeapon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open.
        /// </summary>
        public static string MenuHeader_Open {
            get {
                return ResourceManager.GetString("MenuHeader_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resave All.
        /// </summary>
        public static string MenuHeader_ResaveAll {
            get {
                return ResourceManager.GetString("MenuHeader_ResaveAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        public static string MenuHeader_Save {
            get {
                return ResourceManager.GetString("MenuHeader_Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Gems.
        /// </summary>
        public static string MenuHeader_ShowGems {
            get {
                return ResourceManager.GetString("MenuHeader_ShowGems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tools.
        /// </summary>
        public static string MenuHeader_Tools {
            get {
                return ResourceManager.GetString("MenuHeader_Tools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Equipment.
        /// </summary>
        public static string PropCate_Equipment {
            get {
                return ResourceManager.GetString("PropCate_Equipment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Equipment - Sockets.
        /// </summary>
        public static string PropCate_EquipmentSockets {
            get {
                return ResourceManager.GetString("PropCate_EquipmentSockets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Equipment - Stats.
        /// </summary>
        public static string PropCate_EquipmentStats {
            get {
                return ResourceManager.GetString("PropCate_EquipmentStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gem.
        /// </summary>
        public static string PropCate_Gem {
            get {
                return ResourceManager.GetString("PropCate_Gem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item.
        /// </summary>
        public static string PropCate_Item {
            get {
                return ResourceManager.GetString("PropCate_Item", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Equipment - Requirements.
        /// </summary>
        public static string PropCate_Requirements {
            get {
                return ResourceManager.GetString("PropCate_Requirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set.
        /// </summary>
        public static string PropCate_Set {
            get {
                return ResourceManager.GetString("PropCate_Set", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Weapon.
        /// </summary>
        public static string PropCate_Weapon {
            get {
                return ResourceManager.GetString("PropCate_Weapon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The additional effects the item provides when it gets equipped..
        /// </summary>
        public static string PropDesc_AdditionalEffects {
            get {
                return ResourceManager.GetString("PropDesc_AdditionalEffects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to States whether the item provides any additional effects when it gets equipped..
        /// </summary>
        public static string PropDesc_AdditionalEffectsToggle {
            get {
                return ResourceManager.GetString("PropDesc_AdditionalEffectsToggle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Agility increases Chance To Dodge, Melee and Ranged Attack Speed and to a small part Armor..
        /// </summary>
        public static string PropDesc_Agility {
            get {
                return ResourceManager.GetString("PropDesc_Agility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The item affixes this item is allowed to be &apos;enhanced&apos; with.
        ///Example Prefix: &apos;Sturdy&apos;.
        ///Example Suffix: &apos;of the Sorcery&apos;..
        /// </summary>
        public static string PropDesc_AllowedAffixes {
            get {
                return ResourceManager.GetString("PropDesc_AllowedAffixes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the sprite group that holds the animations shown in-game on the character..
        /// </summary>
        public static string PropDesc_AnimationSpriteGroup {
            get {
                return ResourceManager.GetString("PropDesc_AnimationSpriteGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The armor the item provides. Armor mitigates physical damage..
        /// </summary>
        public static string PropDesc_Armor {
            get {
                return ResourceManager.GetString("PropDesc_Armor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of mitigation the armor of the item provides against physical damage in %. (against an enemy that has the same level as the item).
        /// </summary>
        public static string PropDesc_ArmorMitigation {
            get {
                return ResourceManager.GetString("PropDesc_ArmorMitigation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The time between two swings/uses of the weapon. Attack Speed is improved by agility..
        /// </summary>
        public static string PropDesc_AttackSpeed {
            get {
                return ResourceManager.GetString("PropDesc_AttackSpeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The damage the weapon provides in average..
        /// </summary>
        public static string PropDesc_AverageDamage {
            get {
                return ResourceManager.GetString("PropDesc_AverageDamage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum damage the weapon provides..
        /// </summary>
        public static string PropDesc_DamageMaximum {
            get {
                return ResourceManager.GetString("PropDesc_DamageMaximum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum damage the weapon provides..
        /// </summary>
        public static string PropDesc_DamageMinimum {
            get {
                return ResourceManager.GetString("PropDesc_DamageMinimum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The damage per second (DPS) the weapon provides in average..
        /// </summary>
        public static string PropDesc_DamagePerSecond {
            get {
                return ResourceManager.GetString("PropDesc_DamagePerSecond", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The description of the item..
        /// </summary>
        public static string PropDesc_Description {
            get {
                return ResourceManager.GetString("PropDesc_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dexterity increases Ranged Attack Power (RAP), the change to hit (and not miss an attack), to a small part also Melee Attack Power and reduces the cast-time of spell..
        /// </summary>
        public static string PropDesc_Dexterity {
            get {
                return ResourceManager.GetString("PropDesc_Dexterity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to States an additional requirement that when not fulfilled won&apos;t allow the Item to be dropped..
        /// </summary>
        public static string PropDesc_DropRequirement {
            get {
                return ResourceManager.GetString("PropDesc_DropRequirement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The color of the gem. To receive the socket bonus of an item with sockets all sockets must have gems with the same color as the corresponding sockets..
        /// </summary>
        public static string PropDesc_GemColor {
            get {
                return ResourceManager.GetString("PropDesc_GemColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The effects the gem provides when socketed into an equipment..
        /// </summary>
        public static string PropDesc_GemEffects {
            get {
                return ResourceManager.GetString("PropDesc_GemEffects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to States whether the equipment contains any sockets..
        /// </summary>
        public static string PropDesc_HasSockets {
            get {
                return ResourceManager.GetString("PropDesc_HasSockets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of tiles the item takes up in the inventory - horizontally..
        /// </summary>
        public static string PropDesc_HeightInInventory {
            get {
                return ResourceManager.GetString("PropDesc_HeightInInventory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The color the weapon is tinted in in-game on the character..
        /// </summary>
        public static string PropDesc_IngameColor {
            get {
                return ResourceManager.GetString("PropDesc_IngameColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intelligence increases Magical Attack Power (MagAP), the amount of Mana, and Mana Regeneration..
        /// </summary>
        public static string PropDesc_Intelligence {
            get {
                return ResourceManager.GetString("PropDesc_Intelligence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ItemPoints are calculated by taking into account ItemLevel, ItemQuality and EquipmentSlot. Each investment into an stat or bonus takes up Item Points..
        /// </summary>
        public static string PropDesc_ItemPoints {
            get {
                return ResourceManager.GetString("PropDesc_ItemPoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The level of the item. The amount of &apos;Item Points&apos; an item can use depends on the item&apos;s level, quality/rarity and the slot the item may be equipped in..
        /// </summary>
        public static string PropDesc_Level {
            get {
                return ResourceManager.GetString("PropDesc_Level", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The localized description (for the current locale) of the item..
        /// </summary>
        public static string PropDesc_LocalizedDescription {
            get {
                return ResourceManager.GetString("PropDesc_LocalizedDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The localized name (for the current locale) of the item..
        /// </summary>
        public static string PropDesc_LocalizedName {
            get {
                return ResourceManager.GetString("PropDesc_LocalizedName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Luck increases the chance to get a Critical Attack and the chance to find rare items..
        /// </summary>
        public static string PropDesc_Luck {
            get {
                return ResourceManager.GetString("PropDesc_Luck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the item. Items are saved under their name..
        /// </summary>
        public static string PropDesc_Name {
            get {
                return ResourceManager.GetString("PropDesc_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The effect that is triggered when the player uses the item..
        /// </summary>
        public static string PropDesc_OnUseEffect {
            get {
                return ResourceManager.GetString("PropDesc_OnUseEffect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The quality of the item. The amount of &apos;Item Points&apos; an item can use depends on the item&apos;s level, quality/rarity and the slot the item may be equipped in..
        /// </summary>
        public static string PropDesc_Quality {
            get {
                return ResourceManager.GetString("PropDesc_Quality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The names of the recipes that use the item as a reagent..
        /// </summary>
        public static string PropDesc_Recipes {
            get {
                return ResourceManager.GetString("PropDesc_Recipes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of agility the item requires before it can be equipped..
        /// </summary>
        public static string PropDesc_RequiredAgility {
            get {
                return ResourceManager.GetString("PropDesc_RequiredAgility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of dexterity the item requires before it can be equipped..
        /// </summary>
        public static string PropDesc_RequiredDexterity {
            get {
                return ResourceManager.GetString("PropDesc_RequiredDexterity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of intelligence the item requires before it can be equipped..
        /// </summary>
        public static string PropDesc_RequiredIntelligence {
            get {
                return ResourceManager.GetString("PropDesc_RequiredIntelligence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The level the item requires before it can be equipped..
        /// </summary>
        public static string PropDesc_RequiredLevel {
            get {
                return ResourceManager.GetString("PropDesc_RequiredLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of luck the item requires before it can be equipped..
        /// </summary>
        public static string PropDesc_RequiredLuck {
            get {
                return ResourceManager.GetString("PropDesc_RequiredLuck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of strength the item requires before it can be equipped..
        /// </summary>
        public static string PropDesc_RequiredStrength {
            get {
                return ResourceManager.GetString("PropDesc_RequiredStrength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of vitality the item requires before it can be equipped..
        /// </summary>
        public static string PropDesc_RequiredVitality {
            get {
                return ResourceManager.GetString("PropDesc_RequiredVitality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of rubies the items is worth when sold..
        /// </summary>
        public static string PropDesc_RubiesWorth {
            get {
                return ResourceManager.GetString("PropDesc_RubiesWorth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The set this equipment is part of..
        /// </summary>
        public static string PropDesc_Set {
            get {
                return ResourceManager.GetString("PropDesc_Set", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The bonus the set provides when the player has equipped all items of the set..
        /// </summary>
        public static string PropDesc_SetBonus {
            get {
                return ResourceManager.GetString("PropDesc_SetBonus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The items the set consists of..
        /// </summary>
        public static string PropDesc_SetItems {
            get {
                return ResourceManager.GetString("PropDesc_SetItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The slot the equipment goes in. The amount of &apos;Item Points&apos; an item can use depends on the item&apos;s level, quality/rarity and the slot the item may be equipped in..
        /// </summary>
        public static string PropDesc_Slot {
            get {
                return ResourceManager.GetString("PropDesc_Slot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The additional bonus that is applied when all sockets of the equipment are socketed with color-matching gems..
        /// </summary>
        public static string PropDesc_SocketBonus {
            get {
                return ResourceManager.GetString("PropDesc_SocketBonus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sockets of the equipment. Sockets allow customization of an item by placing gems into the sockets..
        /// </summary>
        public static string PropDesc_Sockets {
            get {
                return ResourceManager.GetString("PropDesc_Sockets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the sound resource that is played when the Player has picked up the item..
        /// </summary>
        public static string PropDesc_SoundOnPickupName {
            get {
                return ResourceManager.GetString("PropDesc_SoundOnPickupName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The volume of the sound on pickup. [0..1] with 0=silent and 1=normal.
        /// </summary>
        public static string PropDesc_SoundOnPickupVolume {
            get {
                return ResourceManager.GetString("PropDesc_SoundOnPickupVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The special type associated with this Item..
        /// </summary>
        public static string PropDesc_SpecialType {
            get {
                return ResourceManager.GetString("PropDesc_SpecialType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sprite that is used to visualize the item in the world..
        /// </summary>
        public static string PropDesc_Sprite {
            get {
                return ResourceManager.GetString("PropDesc_Sprite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The color the sprite of the item is tinted in..
        /// </summary>
        public static string PropDesc_SpriteColor {
            get {
                return ResourceManager.GetString("PropDesc_SpriteColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of items of this type that can be placed on-top of each other (for example in the Inventory)..
        /// </summary>
        public static string PropDesc_StackSize {
            get {
                return ResourceManager.GetString("PropDesc_StackSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Strength increases Melee Attack Power (MAP), and to a small amount how much damage may be blocked by the shield..
        /// </summary>
        public static string PropDesc_Strength {
            get {
                return ResourceManager.GetString("PropDesc_Strength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vitality increases Life Points, the Life Point Regeneration and also increases the chance to resist (bad) status changing effects..
        /// </summary>
        public static string PropDesc_Vitality {
            get {
                return ResourceManager.GetString("PropDesc_Vitality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of the weapon..
        /// </summary>
        public static string PropDesc_WeaponType {
            get {
                return ResourceManager.GetString("PropDesc_WeaponType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of tiles the item takes up in the inventory - vertically..
        /// </summary>
        public static string PropDesc_WidthInInventory {
            get {
                return ResourceManager.GetString("PropDesc_WidthInInventory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional Effects.
        /// </summary>
        public static string PropDisp_AdditionalEffects {
            get {
                return ResourceManager.GetString("PropDisp_AdditionalEffects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional Effects Toggle.
        /// </summary>
        public static string PropDisp_AdditionalEffectsToggle {
            get {
                return ResourceManager.GetString("PropDisp_AdditionalEffectsToggle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Agility.
        /// </summary>
        public static string PropDisp_Agility {
            get {
                return ResourceManager.GetString("PropDisp_Agility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allowed Affixes.
        /// </summary>
        public static string PropDisp_AllowedAffixes {
            get {
                return ResourceManager.GetString("PropDisp_AllowedAffixes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Animation Sprite Group.
        /// </summary>
        public static string PropDisp_AnimationSpriteGroup {
            get {
                return ResourceManager.GetString("PropDisp_AnimationSpriteGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Armor.
        /// </summary>
        public static string PropDisp_Armor {
            get {
                return ResourceManager.GetString("PropDisp_Armor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Armor Mitigation.
        /// </summary>
        public static string PropDisp_ArmorMitigation {
            get {
                return ResourceManager.GetString("PropDisp_ArmorMitigation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attack Speed.
        /// </summary>
        public static string PropDisp_AttackSpeed {
            get {
                return ResourceManager.GetString("PropDisp_AttackSpeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Average Damage.
        /// </summary>
        public static string PropDisp_AverageDamage {
            get {
                return ResourceManager.GetString("PropDisp_AverageDamage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Damage Maximum.
        /// </summary>
        public static string PropDisp_DamageMaximum {
            get {
                return ResourceManager.GetString("PropDisp_DamageMaximum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Damage Minimum.
        /// </summary>
        public static string PropDisp_DamageMinimum {
            get {
                return ResourceManager.GetString("PropDisp_DamageMinimum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Damage Per Second.
        /// </summary>
        public static string PropDisp_DamagePerSecond {
            get {
                return ResourceManager.GetString("PropDisp_DamagePerSecond", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        public static string PropDisp_Description {
            get {
                return ResourceManager.GetString("PropDisp_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dexterity.
        /// </summary>
        public static string PropDisp_Dexterity {
            get {
                return ResourceManager.GetString("PropDisp_Dexterity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drop Requirement.
        /// </summary>
        public static string PropDisp_DropRequirement {
            get {
                return ResourceManager.GetString("PropDisp_DropRequirement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Color.
        /// </summary>
        public static string PropDisp_GemColor {
            get {
                return ResourceManager.GetString("PropDisp_GemColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Effects.
        /// </summary>
        public static string PropDisp_GemEffects {
            get {
                return ResourceManager.GetString("PropDisp_GemEffects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Has Sockets.
        /// </summary>
        public static string PropDisp_HasSockets {
            get {
                return ResourceManager.GetString("PropDisp_HasSockets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inventory Height.
        /// </summary>
        public static string PropDisp_HeightInInventory {
            get {
                return ResourceManager.GetString("PropDisp_HeightInInventory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ingame Color.
        /// </summary>
        public static string PropDisp_IngameColor {
            get {
                return ResourceManager.GetString("PropDisp_IngameColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intelligence.
        /// </summary>
        public static string PropDisp_Intelligence {
            get {
                return ResourceManager.GetString("PropDisp_Intelligence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item Points.
        /// </summary>
        public static string PropDisp_ItemPoints {
            get {
                return ResourceManager.GetString("PropDisp_ItemPoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Level.
        /// </summary>
        public static string PropDisp_Level {
            get {
                return ResourceManager.GetString("PropDisp_Level", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description (localized).
        /// </summary>
        public static string PropDisp_LocalizedDescription {
            get {
                return ResourceManager.GetString("PropDisp_LocalizedDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name (localized).
        /// </summary>
        public static string PropDisp_LocalizedName {
            get {
                return ResourceManager.GetString("PropDisp_LocalizedName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Luck.
        /// </summary>
        public static string PropDisp_Luck {
            get {
                return ResourceManager.GetString("PropDisp_Luck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string PropDisp_Name {
            get {
                return ResourceManager.GetString("PropDisp_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On Use Effect.
        /// </summary>
        public static string PropDisp_OnUseEffect {
            get {
                return ResourceManager.GetString("PropDisp_OnUseEffect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quality.
        /// </summary>
        public static string PropDisp_Quality {
            get {
                return ResourceManager.GetString("PropDisp_Quality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recipes.
        /// </summary>
        public static string PropDisp_Recipes {
            get {
                return ResourceManager.GetString("PropDisp_Recipes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required Agility.
        /// </summary>
        public static string PropDisp_RequiredAgility {
            get {
                return ResourceManager.GetString("PropDisp_RequiredAgility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required Dexterity.
        /// </summary>
        public static string PropDisp_RequiredDexterity {
            get {
                return ResourceManager.GetString("PropDisp_RequiredDexterity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required Intelligence.
        /// </summary>
        public static string PropDisp_RequiredIntelligence {
            get {
                return ResourceManager.GetString("PropDisp_RequiredIntelligence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required Level.
        /// </summary>
        public static string PropDisp_RequiredLevel {
            get {
                return ResourceManager.GetString("PropDisp_RequiredLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required Luck.
        /// </summary>
        public static string PropDisp_RequiredLuck {
            get {
                return ResourceManager.GetString("PropDisp_RequiredLuck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required Strength.
        /// </summary>
        public static string PropDisp_RequiredStrength {
            get {
                return ResourceManager.GetString("PropDisp_RequiredStrength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required Vitality.
        /// </summary>
        public static string PropDisp_RequiredVitality {
            get {
                return ResourceManager.GetString("PropDisp_RequiredVitality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rubies Worth.
        /// </summary>
        public static string PropDisp_RubiesWorth {
            get {
                return ResourceManager.GetString("PropDisp_RubiesWorth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set.
        /// </summary>
        public static string PropDisp_Set {
            get {
                return ResourceManager.GetString("PropDisp_Set", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bonus.
        /// </summary>
        public static string PropDisp_SetBonus {
            get {
                return ResourceManager.GetString("PropDisp_SetBonus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Items.
        /// </summary>
        public static string PropDisp_SetItems {
            get {
                return ResourceManager.GetString("PropDisp_SetItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Slot.
        /// </summary>
        public static string PropDisp_Slot {
            get {
                return ResourceManager.GetString("PropDisp_Slot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bonus.
        /// </summary>
        public static string PropDisp_SocketBonus {
            get {
                return ResourceManager.GetString("PropDisp_SocketBonus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sockets.
        /// </summary>
        public static string PropDisp_Sockets {
            get {
                return ResourceManager.GetString("PropDisp_Sockets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sound on pickup.
        /// </summary>
        public static string PropDisp_SoundOnPickupName {
            get {
                return ResourceManager.GetString("PropDisp_SoundOnPickupName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sound on pickup Volume.
        /// </summary>
        public static string PropDisp_SoundOnPickupVolume {
            get {
                return ResourceManager.GetString("PropDisp_SoundOnPickupVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Special Type.
        /// </summary>
        public static string PropDisp_SpecialType {
            get {
                return ResourceManager.GetString("PropDisp_SpecialType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sprite.
        /// </summary>
        public static string PropDisp_Sprite {
            get {
                return ResourceManager.GetString("PropDisp_Sprite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sprite Color.
        /// </summary>
        public static string PropDisp_SpriteColor {
            get {
                return ResourceManager.GetString("PropDisp_SpriteColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stack Size.
        /// </summary>
        public static string PropDisp_StackSize {
            get {
                return ResourceManager.GetString("PropDisp_StackSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Strength.
        /// </summary>
        public static string PropDisp_Strength {
            get {
                return ResourceManager.GetString("PropDisp_Strength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vitality.
        /// </summary>
        public static string PropDisp_Vitality {
            get {
                return ResourceManager.GetString("PropDisp_Vitality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        public static string PropDisp_WeaponType {
            get {
                return ResourceManager.GetString("PropDisp_WeaponType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inventory Width.
        /// </summary>
        public static string PropDisp_WidthInInventory {
            get {
                return ResourceManager.GetString("PropDisp_WidthInInventory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you really wish to remove all existing sockets from the equipment?.
        /// </summary>
        public static string Question_ReallyRemoveAllSocketsFromTheEquipment {
            get {
                return ResourceManager.GetString("Question_ReallyRemoveAllSocketsFromTheEquipment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item Creator for TLoZ - Black Crown.
        /// </summary>
        public static string Title {
            get {
                return ResourceManager.GetString("Title", resourceCulture);
            }
        }
    }
}
