//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Zelda.Editor.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Zelda.Editor.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ActionSheet.
        /// </summary>
        public static string AssetPath_ActionSheet {
            get {
                return ResourceManager.GetString("AssetPath_ActionSheet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add BGM.
        /// </summary>
        public static string ButtonText_AddBackgroundMusic {
            get {
                return ResourceManager.GetString("ButtonText_AddBackgroundMusic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Event.
        /// </summary>
        public static string ButtonText_AddEvent {
            get {
                return ResourceManager.GetString("ButtonText_AddEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Event Trigger.
        /// </summary>
        public static string ButtonText_AddEventTrigger {
            get {
                return ResourceManager.GetString("ButtonText_AddEventTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Floor.
        /// </summary>
        public static string ButtonText_AddFloor {
            get {
                return ResourceManager.GetString("ButtonText_AddFloor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Layer.
        /// </summary>
        public static string ButtonText_AddLayer {
            get {
                return ResourceManager.GetString("ButtonText_AddLayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string ButtonText_Cancel {
            get {
                return ResourceManager.GetString("ButtonText_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fill Layer.
        /// </summary>
        public static string ButtonText_FillLayer {
            get {
                return ResourceManager.GetString("ButtonText_FillLayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move Down.
        /// </summary>
        public static string ButtonText_MoveFloorDown {
            get {
                return ResourceManager.GetString("ButtonText_MoveFloorDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move Up.
        /// </summary>
        public static string ButtonText_MoveFloorUp {
            get {
                return ResourceManager.GetString("ButtonText_MoveFloorUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move Down.
        /// </summary>
        public static string ButtonText_MoveLayerDown {
            get {
                return ResourceManager.GetString("ButtonText_MoveLayerDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move Up.
        /// </summary>
        public static string ButtonText_MoveLayerUp {
            get {
                return ResourceManager.GetString("ButtonText_MoveLayerUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move To.
        /// </summary>
        public static string ButtonText_MoveToObject {
            get {
                return ResourceManager.GetString("ButtonText_MoveToObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Object.
        /// </summary>
        public static string ButtonText_NewObject {
            get {
                return ResourceManager.GetString("ButtonText_NewObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        public static string ButtonText_OK {
            get {
                return ResourceManager.GetString("ButtonText_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove BGM.
        /// </summary>
        public static string ButtonText_RemoveBackgroundMusic {
            get {
                return ResourceManager.GetString("ButtonText_RemoveBackgroundMusic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Floor.
        /// </summary>
        public static string ButtonText_RemoveFloor {
            get {
                return ResourceManager.GetString("ButtonText_RemoveFloor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Layer.
        /// </summary>
        public static string ButtonText_RemoveLayer {
            get {
                return ResourceManager.GetString("ButtonText_RemoveLayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Sheet.
        /// </summary>
        public static string ButtonText_SetSpriteSheet {
            get {
                return ResourceManager.GetString("ButtonText_SetSpriteSheet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the music tracks to add to the Scene..
        /// </summary>
        public static string DialogTitle_AddBackgroundMusic {
            get {
                return ResourceManager.GetString("DialogTitle_AddBackgroundMusic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the type of the Entity..
        /// </summary>
        public static string DialogTitle_EntityTypeSelection {
            get {
                return ResourceManager.GetString("DialogTitle_EntityTypeSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Scene.
        /// </summary>
        public static string DialogTitle_NewScene {
            get {
                return ResourceManager.GetString("DialogTitle_NewScene", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the Scene to open..
        /// </summary>
        public static string DialogTitle_OpenScene {
            get {
                return ResourceManager.GetString("DialogTitle_OpenScene", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the entity template to use..
        /// </summary>
        public static string DialogTitle_SelectEntityTemplate {
            get {
                return ResourceManager.GetString("DialogTitle_SelectEntityTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the Item Resource to use..
        /// </summary>
        public static string DialogTitle_SelectItem {
            get {
                return ResourceManager.GetString("DialogTitle_SelectItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a Quest Definition File..
        /// </summary>
        public static string DialogTitle_SelectQuest {
            get {
                return ResourceManager.GetString("DialogTitle_SelectQuest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a Sprite resource..
        /// </summary>
        public static string DialogTitle_SelectSprite {
            get {
                return ResourceManager.GetString("DialogTitle_SelectSprite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a SpriteSheet resource..
        /// </summary>
        public static string DialogTitle_SetSheet {
            get {
                return ResourceManager.GetString("DialogTitle_SetSheet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The action layer of the floor is null. An action layer is required..
        /// </summary>
        public static string Error_ActionLayerOfFloorIsNull {
            get {
                return ResourceManager.GetString("Error_ActionLayerOfFloorIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given TileMapFloor is not part of this TileMap. This is required..
        /// </summary>
        public static string Error_GivenFloorIsNotPartOfTileMap {
            get {
                return ResourceManager.GetString("Error_GivenFloorIsNotPartOfTileMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given TileMapDataLayer is not an action layer. This is required..
        /// </summary>
        public static string Error_GivenLayerIsNoActionLayer {
            get {
                return ResourceManager.GetString("Error_GivenLayerIsNoActionLayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given TileMapSpriteDataLayer is not part of this TileMapFloor. This is required..
        /// </summary>
        public static string Error_GivenLayerIsNotPartOfFloor {
            get {
                return ResourceManager.GetString("Error_GivenLayerIsNotPartOfFloor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name is required to be unique..
        /// </summary>
        public static string Error_NameMustBeUnique {
            get {
                return ResourceManager.GetString("Error_NameMustBeUnique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There already exists an entity with the name &apos;{0}&apos;. Names must be unique..
        /// </summary>
        public static string Error_ThereAlreadyExistsEntityWithNameX {
            get {
                return ResourceManager.GetString("Error_ThereAlreadyExistsEntityWithNameX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Editor&apos;s Log.log.
        /// </summary>
        public static string FileLogName {
            get {
                return ResourceManager.GetString("FileLogName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item Resources (*.zitm)|*.zitm.
        /// </summary>
        public static string Filter_ItemResources {
            get {
                return ResourceManager.GetString("Filter_ItemResources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quest Resources (*.zq)|*.zq.
        /// </summary>
        public static string Filter_QuestResources {
            get {
                return ResourceManager.GetString("Filter_QuestResources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scene Files (*.zs)|*.zs.
        /// </summary>
        public static string Filter_Scene {
            get {
                return ResourceManager.GetString("Filter_Scene", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SpriteSheet Resources (*.sprsh)|*.sprsh.
        /// </summary>
        public static string Filter_SpriteSheet {
            get {
                return ResourceManager.GetString("Filter_SpriteSheet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Floor &apos;{0}&apos;.
        /// </summary>
        public static string Format_FloorNameIndexX {
            get {
                return ResourceManager.GetString("Format_FloorNameIndexX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected Object.
        /// </summary>
        public static string Headline_SelecteObject {
            get {
                return ResourceManager.GetString("Headline_SelecteObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All fields are required to have an value..
        /// </summary>
        public static string Info_AllFieldsRequired {
            get {
                return ResourceManager.GetString("Info_AllFieldsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Height must be greater than {0}..
        /// </summary>
        public static string Info_HeightMustBeGreaterThanX {
            get {
                return ResourceManager.GetString("Info_HeightMustBeGreaterThanX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scene &apos;{0}&apos; has been successfully saved..
        /// </summary>
        public static string Info_SceneXSaved {
            get {
                return ResourceManager.GetString("Info_SceneXSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entity {0} can&apos;t be manually removed from the scene..
        /// </summary>
        public static string Info_TheEntityXCantBeRemoved {
            get {
                return ResourceManager.GetString("Info_TheEntityXCantBeRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Width must be greater than {0}..
        /// </summary>
        public static string Info_WidthMustBeGreaterThanX {
            get {
                return ResourceManager.GetString("Info_WidthMustBeGreaterThanX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambient Color.
        /// </summary>
        public static string Label_AmbientColor {
            get {
                return ResourceManager.GetString("Label_AmbientColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Background Music.
        /// </summary>
        public static string Label_BackgroundMusic {
            get {
                return ResourceManager.GetString("Label_BackgroundMusic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Properties.
        /// </summary>
        public static string Label_EventProperties {
            get {
                return ResourceManager.GetString("Label_EventProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Events.
        /// </summary>
        public static string Label_Events {
            get {
                return ResourceManager.GetString("Label_Events", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Triggers.
        /// </summary>
        public static string Label_EventTriggers {
            get {
                return ResourceManager.GetString("Label_EventTriggers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Floor Count:.
        /// </summary>
        public static string Label_FloorCount {
            get {
                return ResourceManager.GetString("Label_FloorCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FLOORS.
        /// </summary>
        public static string Label_Floors {
            get {
                return ResourceManager.GetString("Label_Floors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incident Properties.
        /// </summary>
        public static string Label_IncidentProperties {
            get {
                return ResourceManager.GetString("Label_IncidentProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incidents.
        /// </summary>
        public static string Label_Incidents {
            get {
                return ResourceManager.GetString("Label_Incidents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name:.
        /// </summary>
        public static string Label_LayerName {
            get {
                return ResourceManager.GetString("Label_LayerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LAYER SETTINGS.
        /// </summary>
        public static string Label_LayerSettings {
            get {
                return ResourceManager.GetString("Label_LayerSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sprite Sheet:.
        /// </summary>
        public static string Label_LayerSpriteSheet {
            get {
                return ResourceManager.GetString("Label_LayerSpriteSheet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type:.
        /// </summary>
        public static string Label_LayerType {
            get {
                return ResourceManager.GetString("Label_LayerType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is Visible:.
        /// </summary>
        public static string Label_LayerVisability {
            get {
                return ResourceManager.GetString("Label_LayerVisability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paths.
        /// </summary>
        public static string Label_Paths {
            get {
                return ResourceManager.GetString("Label_Paths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path Segments.
        /// </summary>
        public static string Label_PathSegments {
            get {
                return ResourceManager.GetString("Label_PathSegments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Properties.
        /// </summary>
        public static string Label_Properties {
            get {
                return ResourceManager.GetString("Label_Properties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Height:.
        /// </summary>
        public static string Label_SceneHeight {
            get {
                return ResourceManager.GetString("Label_SceneHeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name:.
        /// </summary>
        public static string Label_SceneName {
            get {
                return ResourceManager.GetString("Label_SceneName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scene Name.
        /// </summary>
        public static string Label_SceneName_Large {
            get {
                return ResourceManager.GetString("Label_SceneName_Large", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scene Type.
        /// </summary>
        public static string Label_SceneType {
            get {
                return ResourceManager.GetString("Label_SceneType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Width:.
        /// </summary>
        public static string Label_SceneWidth {
            get {
                return ResourceManager.GetString("Label_SceneWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SPRITE LAYERS.
        /// </summary>
        public static string Label_SpriteLayers {
            get {
                return ResourceManager.GetString("Label_SpriteLayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeline Properties.
        /// </summary>
        public static string Label_TimelineProperties {
            get {
                return ResourceManager.GetString("Label_TimelineProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timelines.
        /// </summary>
        public static string Label_Timelines {
            get {
                return ResourceManager.GetString("Label_Timelines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waypoints.
        /// </summary>
        public static string Label_Waypoints {
            get {
                return ResourceManager.GetString("Label_Waypoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File.
        /// </summary>
        public static string MenuHeader_File {
            get {
                return ResourceManager.GetString("MenuHeader_File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close Scene.
        /// </summary>
        public static string MenuHeader_File_Close {
            get {
                return ResourceManager.GetString("MenuHeader_File_Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit.
        /// </summary>
        public static string MenuHeader_File_Exit {
            get {
                return ResourceManager.GetString("MenuHeader_File_Exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Scene.
        /// </summary>
        public static string MenuHeader_File_New {
            get {
                return ResourceManager.GetString("MenuHeader_File_New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Scene.
        /// </summary>
        public static string MenuHeader_File_Open {
            get {
                return ResourceManager.GetString("MenuHeader_File_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save Scene.
        /// </summary>
        public static string MenuHeader_File_Save {
            get {
                return ResourceManager.GetString("MenuHeader_File_Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help.
        /// </summary>
        public static string MenuHeader_Help {
            get {
                return ResourceManager.GetString("MenuHeader_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View.
        /// </summary>
        public static string MenuHeader_View {
            get {
                return ResourceManager.GetString("MenuHeader_View", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to }null sprite{.
        /// </summary>
        public static string NullSprite {
            get {
                return ResourceManager.GetString("NullSprite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collision.
        /// </summary>
        public static string PropCate_Collision {
            get {
                return ResourceManager.GetString("PropCate_Collision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Draw Settings.
        /// </summary>
        public static string PropCate_DrawSettings {
            get {
                return ResourceManager.GetString("PropCate_DrawSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Events.
        /// </summary>
        public static string PropCate_Events {
            get {
                return ResourceManager.GetString("PropCate_Events", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identification.
        /// </summary>
        public static string PropCate_Identification {
            get {
                return ResourceManager.GetString("PropCate_Identification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Light Settings.
        /// </summary>
        public static string PropCate_LightSettings {
            get {
                return ResourceManager.GetString("PropCate_LightSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string PropCate_Settings {
            get {
                return ResourceManager.GetString("PropCate_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sound Settings.
        /// </summary>
        public static string PropCate_SoundSettings {
            get {
                return ResourceManager.GetString("PropCate_SoundSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transformation.
        /// </summary>
        public static string PropCate_Transform {
            get {
                return ResourceManager.GetString("PropCate_Transform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Visualization.
        /// </summary>
        public static string PropCate_Visuals {
            get {
                return ResourceManager.GetString("PropCate_Visuals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event that gets executed when the block is triggered..
        /// </summary>
        public static string PropDesc_BlockTrigger_Event {
            get {
                return ResourceManager.GetString("PropDesc_BlockTrigger_Event", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The area in which this entity is considered to collide with other entities..
        /// </summary>
        public static string PropDesc_CollisionArea {
            get {
                return ResourceManager.GetString("PropDesc_CollisionArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Represents the collision area of the Object..
        /// </summary>
        public static string PropDesc_CollisionRectangle {
            get {
                return ResourceManager.GetString("PropDesc_CollisionRectangle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The direction of the entity..
        /// </summary>
        public static string PropDesc_Direction {
            get {
                return ResourceManager.GetString("PropDesc_Direction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object that contains the drawing data and logic for the entity..
        /// </summary>
        public static string PropDesc_DrawDataAndStrategy {
            get {
                return ResourceManager.GetString("PropDesc_DrawDataAndStrategy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The full name of the type that contains the drawing data and logic for the entity..
        /// </summary>
        public static string PropDesc_DrawDataAndStrategyType {
            get {
                return ResourceManager.GetString("PropDesc_DrawDataAndStrategyType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The modifier that is applied to the entity..
        /// </summary>
        public static string PropDesc_EntityModifier {
            get {
                return ResourceManager.GetString("PropDesc_EntityModifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to States whether there is a Light associated with the FirePlace..
        /// </summary>
        public static string PropDesc_FirePlace_HasLight {
            get {
                return ResourceManager.GetString("PropDesc_FirePlace_HasLight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to States whether the FirePlace is emitting a sound using a SoundEmitter..
        /// </summary>
        public static string PropDesc_FirePlace_HasSoundEmitter {
            get {
                return ResourceManager.GetString("PropDesc_FirePlace_HasSoundEmitter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to States whether the player can unlit/lit the FirePlace by using it..
        /// </summary>
        public static string PropDesc_FirePlace_IsSwitchable {
            get {
                return ResourceManager.GetString("PropDesc_FirePlace_IsSwitchable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to States whether the FirePlace is currently lit..
        /// </summary>
        public static string PropDesc_FirePlace_IsSwitched {
            get {
                return ResourceManager.GetString("PropDesc_FirePlace_IsSwitched", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Light that is associated with the FirePlace..
        /// </summary>
        public static string PropDesc_FirePlace_Light {
            get {
                return ResourceManager.GetString("PropDesc_FirePlace_Light", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The positional SoundEmitter that is attached to the FirePlace..
        /// </summary>
        public static string PropDesc_FirePlace_SoundEmitter {
            get {
                return ResourceManager.GetString("PropDesc_FirePlace_SoundEmitter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sprite that is shown when the FirePlace is unlit..
        /// </summary>
        public static string PropDesc_FirePlace_SpriteOff {
            get {
                return ResourceManager.GetString("PropDesc_FirePlace_SpriteOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sprite that is shown when the FirePlace is lit..
        /// </summary>
        public static string PropDesc_FirePlace_SpriteOn {
            get {
                return ResourceManager.GetString("PropDesc_FirePlace_SpriteOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of the floor the entity is placed on..
        /// </summary>
        public static string PropDesc_FloorNumber {
            get {
                return ResourceManager.GetString("PropDesc_FloorNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Influences how items on the same floor are sorted on the z-axes..
        /// </summary>
        public static string PropDesc_FloorRelativity {
            get {
                return ResourceManager.GetString("PropDesc_FloorRelativity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to States whether the player has to face the entity to use it..
        /// </summary>
        public static string PropDesc_HasToFaceToUse {
            get {
                return ResourceManager.GetString("PropDesc_HasToFaceToUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to States  whether the EntitySpawn is active, and should spawn the entity..
        /// </summary>
        public static string PropDesc_IsEntitySpawnActive {
            get {
                return ResourceManager.GetString("PropDesc_IsEntitySpawnActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to States whether the persistance of this entity is removed once the player has picked it up..
        /// </summary>
        public static string PropDesc_IsRemovingPersistanceOnPickUp {
            get {
                return ResourceManager.GetString("PropDesc_IsRemovingPersistanceOnPickUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to States whether the object completly goes away after it has been unlocked, even if the scene has been reloaded..
        /// </summary>
        public static string PropDesc_IsRemovingPersistanceOnUnlock {
            get {
                return ResourceManager.GetString("PropDesc_IsRemovingPersistanceOnUnlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The color tainting applied to the Light..
        /// </summary>
        public static string PropDesc_LightColor {
            get {
                return ResourceManager.GetString("PropDesc_LightColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sprite that represents the shape, base brightness and base color of the Light..
        /// </summary>
        public static string PropDesc_LightSprite {
            get {
                return ResourceManager.GetString("PropDesc_LightSprite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press to reload the current Draw Data and Strategy..
        /// </summary>
        public static string PropDesc_LoadDrawDataAndStrategyToggle {
            get {
                return ResourceManager.GetString("PropDesc_LoadDrawDataAndStrategyToggle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The item resource whose instance is placed in the scene..
        /// </summary>
        public static string PropDesc_MapItem {
            get {
                return ResourceManager.GetString("PropDesc_MapItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of times the razor entity bounces back and forth before it starts to rest again..
        /// </summary>
        public static string PropDesc_MaximumRazorBounceCount {
            get {
                return ResourceManager.GetString("PropDesc_MaximumRazorBounceCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The (unique) name of the Object..
        /// </summary>
        public static string PropDesc_Name {
            get {
                return ResourceManager.GetString("PropDesc_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The offset from the position of the object to the beginning of the collision area..
        /// </summary>
        public static string PropDesc_Offset {
            get {
                return ResourceManager.GetString("PropDesc_Offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The position of the Object in the scene..
        /// </summary>
        public static string PropDesc_Position {
            get {
                return ResourceManager.GetString("PropDesc_Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The position of the entity in tile-space..
        /// </summary>
        public static string PropDesc_PositionTile {
            get {
                return ResourceManager.GetString("PropDesc_PositionTile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to States how the razor entity behaves..
        /// </summary>
        public static string PropDesc_RazorBehaviourType {
            get {
                return ResourceManager.GetString("PropDesc_RazorBehaviourType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sprite that is shown when the trigger is switched off..
        /// </summary>
        public static string PropDesc_RedBlueBlockTrigger_SpriteOff {
            get {
                return ResourceManager.GetString("PropDesc_RedBlueBlockTrigger_SpriteOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sprite that is shown when the trigger is switched on..
        /// </summary>
        public static string PropDesc_RedBlueBlockTrigger_SpriteOn {
            get {
                return ResourceManager.GetString("PropDesc_RedBlueBlockTrigger_SpriteOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DualSwitchEvent that gets triggered when the player attacks the RedBlueBlockTrigger..
        /// </summary>
        public static string PropDesc_RedBlueBlockTrigger_SwitchEvent {
            get {
                return ResourceManager.GetString("PropDesc_RedBlueBlockTrigger_SwitchEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The list of EnemyRespawnGroups which determine what and how often Enemies spawn..
        /// </summary>
        public static string PropDesc_RespawnGroups {
            get {
                return ResourceManager.GetString("PropDesc_RespawnGroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The rotation of the Object in degrees..
        /// </summary>
        public static string PropDesc_RotationDegree {
            get {
                return ResourceManager.GetString("PropDesc_RotationDegree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to States whether the current location of the player is set as the spawn point upon loading the game when he spawn at this spawn point..
        /// </summary>
        public static string PropDesc_SaveLocationAtSpawn {
            get {
                return ResourceManager.GetString("PropDesc_SaveLocationAtSpawn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The scaling factor applied to the Object..
        /// </summary>
        public static string PropDesc_Scale {
            get {
                return ResourceManager.GetString("PropDesc_Scale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The size of the object..
        /// </summary>
        public static string PropDesc_Size {
            get {
                return ResourceManager.GetString("PropDesc_Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sound resource..
        /// </summary>
        public static string PropDesc_Sound {
            get {
                return ResourceManager.GetString("PropDesc_Sound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The combined volume of the sound after 3d sound, volume and channel group volume  calculations have been performed on it..
        /// </summary>
        public static string PropDesc_Sound_Audibility {
            get {
                return ResourceManager.GetString("PropDesc_Sound_Audibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum area the sound stops attenuating at. 
        ///Beyond this point it will stay at the volume it would be at MaximumDistance units from the listener and will not attenuate any more..
        /// </summary>
        public static string PropDesc_Sound_MaximumArea {
            get {
                return ResourceManager.GetString("PropDesc_Sound_MaximumArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The offset applied to the Maximum Sound Area..
        /// </summary>
        public static string PropDesc_Sound_MaximumAreaOffset {
            get {
                return ResourceManager.GetString("PropDesc_Sound_MaximumAreaOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum distance the sound stops attenuating at. 
        ///Beyond this point it will stay at the volume it would be at MaximumDistance units from the listener and will not attenuate any more..
        /// </summary>
        public static string PropDesc_Sound_MaximumDistance {
            get {
                return ResourceManager.GetString("PropDesc_Sound_MaximumDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum area that the sound emitter will cease to continue growing louder at (as it approaches the listener)..
        /// </summary>
        public static string PropDesc_Sound_MinimumArea {
            get {
                return ResourceManager.GetString("PropDesc_Sound_MinimumArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum distance that the sound emitter will cease to continue growing louder at (as it approaches the listener)..
        /// </summary>
        public static string PropDesc_Sound_MinimumDistance {
            get {
                return ResourceManager.GetString("PropDesc_Sound_MinimumDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to States how much the 3d engine has an effect on the channel, versus that set by Channel::setPan, Channel::setSpeakerMix, Channel::setSpeakerLevels.  1 = Sound pans and attenuates according to 3d position. 0 = Attenuation is ignored and pan/speaker levels are defined by Channel::setPan, Channel::setSpeakerMix, Channel::setSpeakerLevels..
        /// </summary>
        public static string PropDesc_Sound_PanLevel3D {
            get {
                return ResourceManager.GetString("PropDesc_Sound_PanLevel3D", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The time between two triggers of the sound emitter..
        /// </summary>
        public static string PropDesc_Sound_TriggerPeriod {
            get {
                return ResourceManager.GetString("PropDesc_Sound_TriggerPeriod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The volume of the sound; where 0 = silent and 1 = full volumne..
        /// </summary>
        public static string PropDesc_Sound_Volumne {
            get {
                return ResourceManager.GetString("PropDesc_Sound_Volumne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The spawning area..
        /// </summary>
        public static string PropDesc_SpawnArea {
            get {
                return ResourceManager.GetString("PropDesc_SpawnArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The direction the entity is spawning. Setting this value to None makes the entity maintain its original direction.
        /// </summary>
        public static string PropDesc_SpawnDirection {
            get {
                return ResourceManager.GetString("PropDesc_SpawnDirection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sprite of the entity..
        /// </summary>
        public static string PropDesc_Sprite {
            get {
                return ResourceManager.GetString("PropDesc_Sprite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the entity template that is used to create the related Entity..
        /// </summary>
        public static string PropDesc_TemplateName {
            get {
                return ResourceManager.GetString("PropDesc_TemplateName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The unique id that identifies the text resource..
        /// </summary>
        public static string PropDesc_TextResourceId {
            get {
                return ResourceManager.GetString("PropDesc_TextResourceId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to States whether the TileBlock entity is solid; and as such blocks all moveable entities..
        /// </summary>
        public static string PropDesc_TileBlock_IsSolid {
            get {
                return ResourceManager.GetString("PropDesc_TileBlock_IsSolid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name that uniquely identifies the type of the object..
        /// </summary>
        public static string PropDesc_TypeName {
            get {
                return ResourceManager.GetString("PropDesc_TypeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event that gets triggered when the player didn&apos;t manage to unlock the door. For example when he was missing the required key..
        /// </summary>
        public static string PropDesc_UnlockableDoor_NotUnlockedEvent {
            get {
                return ResourceManager.GetString("PropDesc_UnlockableDoor_NotUnlockedEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the item that is required to unlock the door..
        /// </summary>
        public static string PropDesc_UnlockableDoor_RequiredKeyItemName {
            get {
                return ResourceManager.GetString("PropDesc_UnlockableDoor_RequiredKeyItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event that gets triggered when the player has unlocked the door..
        /// </summary>
        public static string PropDesc_UnlockableDoor_UnlockedEvent {
            get {
                return ResourceManager.GetString("PropDesc_UnlockableDoor_UnlockedEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The action that is executed when the entity is used..
        /// </summary>
        public static string PropDesc_UseAction {
            get {
                return ResourceManager.GetString("PropDesc_UseAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The area in which the entity can be used..
        /// </summary>
        public static string PropDesc_UseArea {
            get {
                return ResourceManager.GetString("PropDesc_UseArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to States whether the EntitySpawn should 
        ///clone an template entity to create the entity;
        ///or directly load it from the hard-disc..
        /// </summary>
        public static string PropDesc_UseTemplate {
            get {
                return ResourceManager.GetString("PropDesc_UseTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The text shown when the Player gets no Quest from the Wanted Sign Post..
        /// </summary>
        public static string PropDesc_WantedSignPost_LocalizedText {
            get {
                return ResourceManager.GetString("PropDesc_WantedSignPost_LocalizedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name that uniquely identifies the Quest given by the Wanted Sign Post..
        /// </summary>
        public static string PropDesc_WantedSignPost_QuestName {
            get {
                return ResourceManager.GetString("PropDesc_WantedSignPost_QuestName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audibility.
        /// </summary>
        public static string PropDisp_Audibility {
            get {
                return ResourceManager.GetString("PropDisp_Audibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collision Area.
        /// </summary>
        public static string PropDisp_CollisionArea {
            get {
                return ResourceManager.GetString("PropDisp_CollisionArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collision Rectangle.
        /// </summary>
        public static string PropDisp_CollisionRectangle {
            get {
                return ResourceManager.GetString("PropDisp_CollisionRectangle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Color.
        /// </summary>
        public static string PropDisp_Color {
            get {
                return ResourceManager.GetString("PropDisp_Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Direction.
        /// </summary>
        public static string PropDisp_Direction {
            get {
                return ResourceManager.GetString("PropDisp_Direction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Draw Strategy.
        /// </summary>
        public static string PropDisp_DrawDataAndStrategy {
            get {
                return ResourceManager.GetString("PropDisp_DrawDataAndStrategy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Draw Strategy Type.
        /// </summary>
        public static string PropDisp_DrawDataAndStrategyType {
            get {
                return ResourceManager.GetString("PropDisp_DrawDataAndStrategyType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity Modifier.
        /// </summary>
        public static string PropDisp_EntityModifier {
            get {
                return ResourceManager.GetString("PropDisp_EntityModifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is Lit/Unlit-able.
        /// </summary>
        public static string PropDisp_FirePlace_IsSwitchable {
            get {
                return ResourceManager.GetString("PropDisp_FirePlace_IsSwitchable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is Lit.
        /// </summary>
        public static string PropDisp_FirePlace_IsSwitched {
            get {
                return ResourceManager.GetString("PropDisp_FirePlace_IsSwitched", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Floor Number.
        /// </summary>
        public static string PropDisp_FloorNumber {
            get {
                return ResourceManager.GetString("PropDisp_FloorNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Floor Relativity.
        /// </summary>
        public static string PropDisp_FloorRelativity {
            get {
                return ResourceManager.GetString("PropDisp_FloorRelativity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Has Light.
        /// </summary>
        public static string PropDisp_HasLight {
            get {
                return ResourceManager.GetString("PropDisp_HasLight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Has Sound Emitter.
        /// </summary>
        public static string PropDisp_HasSoundEmitter {
            get {
                return ResourceManager.GetString("PropDisp_HasSoundEmitter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Has To Face To Use.
        /// </summary>
        public static string PropDisp_HasToFaceToUse {
            get {
                return ResourceManager.GetString("PropDisp_HasToFaceToUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is Active.
        /// </summary>
        public static string PropDisp_IsActive {
            get {
                return ResourceManager.GetString("PropDisp_IsActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is Persistance Removed On Pick-Up.
        /// </summary>
        public static string PropDisp_IsRemovingPersistanceOnPickUp {
            get {
                return ResourceManager.GetString("PropDisp_IsRemovingPersistanceOnPickUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Persistance On Unlock.
        /// </summary>
        public static string PropDisp_IsRemovingPersistanceOnUnlock {
            get {
                return ResourceManager.GetString("PropDisp_IsRemovingPersistanceOnUnlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is Solid.
        /// </summary>
        public static string PropDisp_IsSolid {
            get {
                return ResourceManager.GetString("PropDisp_IsSolid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Light.
        /// </summary>
        public static string PropDisp_Light {
            get {
                return ResourceManager.GetString("PropDisp_Light", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load Draw Strategy.
        /// </summary>
        public static string PropDisp_LoadDrawDataAndStrategyToggle {
            get {
                return ResourceManager.GetString("PropDisp_LoadDrawDataAndStrategyToggle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Localized Text.
        /// </summary>
        public static string PropDisp_LocalizedText {
            get {
                return ResourceManager.GetString("PropDisp_LocalizedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item.
        /// </summary>
        public static string PropDisp_MapItem {
            get {
                return ResourceManager.GetString("PropDisp_MapItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Area.
        /// </summary>
        public static string PropDisp_MaximumArea {
            get {
                return ResourceManager.GetString("PropDisp_MaximumArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Area Offset.
        /// </summary>
        public static string PropDisp_MaximumAreaOffset {
            get {
                return ResourceManager.GetString("PropDisp_MaximumAreaOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Distance.
        /// </summary>
        public static string PropDisp_MaximumDistance {
            get {
                return ResourceManager.GetString("PropDisp_MaximumDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bounce Count.
        /// </summary>
        public static string PropDisp_MaximumRazorBounceCount {
            get {
                return ResourceManager.GetString("PropDisp_MaximumRazorBounceCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum Area.
        /// </summary>
        public static string PropDisp_MinimumArea {
            get {
                return ResourceManager.GetString("PropDisp_MinimumArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum Distance.
        /// </summary>
        public static string PropDisp_MinimumDistance {
            get {
                return ResourceManager.GetString("PropDisp_MinimumDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string PropDisp_Name {
            get {
                return ResourceManager.GetString("PropDisp_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offset.
        /// </summary>
        public static string PropDisp_Offset {
            get {
                return ResourceManager.GetString("PropDisp_Offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pan Level 3D.
        /// </summary>
        public static string PropDisp_PanLevel3D {
            get {
                return ResourceManager.GetString("PropDisp_PanLevel3D", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Position.
        /// </summary>
        public static string PropDisp_Position {
            get {
                return ResourceManager.GetString("PropDisp_Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Position Tile.
        /// </summary>
        public static string PropDisp_PositionTile {
            get {
                return ResourceManager.GetString("PropDisp_PositionTile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Behaviour Type.
        /// </summary>
        public static string PropDisp_RazorBehaviourType {
            get {
                return ResourceManager.GetString("PropDisp_RazorBehaviourType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Respawn Groups.
        /// </summary>
        public static string PropDisp_RespawnGroups {
            get {
                return ResourceManager.GetString("PropDisp_RespawnGroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rotation.
        /// </summary>
        public static string PropDisp_Rotation {
            get {
                return ResourceManager.GetString("PropDisp_Rotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saves Location at spawn.
        /// </summary>
        public static string PropDisp_SaveLocationAtSpawn {
            get {
                return ResourceManager.GetString("PropDisp_SaveLocationAtSpawn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scale.
        /// </summary>
        public static string PropDisp_Scale {
            get {
                return ResourceManager.GetString("PropDisp_Scale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size.
        /// </summary>
        public static string PropDisp_Size {
            get {
                return ResourceManager.GetString("PropDisp_Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sound.
        /// </summary>
        public static string PropDisp_Sound {
            get {
                return ResourceManager.GetString("PropDisp_Sound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sound Emitter.
        /// </summary>
        public static string PropDisp_SoundEmitter {
            get {
                return ResourceManager.GetString("PropDisp_SoundEmitter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spawn Area.
        /// </summary>
        public static string PropDisp_SpawnArea {
            get {
                return ResourceManager.GetString("PropDisp_SpawnArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spawn Direction.
        /// </summary>
        public static string PropDisp_SpawnDirection {
            get {
                return ResourceManager.GetString("PropDisp_SpawnDirection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sprite.
        /// </summary>
        public static string PropDisp_Sprite {
            get {
                return ResourceManager.GetString("PropDisp_Sprite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sprite Off.
        /// </summary>
        public static string PropDisp_SpriteOff {
            get {
                return ResourceManager.GetString("PropDisp_SpriteOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sprite On.
        /// </summary>
        public static string PropDisp_SpriteOn {
            get {
                return ResourceManager.GetString("PropDisp_SpriteOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch Event.
        /// </summary>
        public static string PropDisp_SwitchEvent {
            get {
                return ResourceManager.GetString("PropDisp_SwitchEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template.
        /// </summary>
        public static string PropDisp_TemplateName {
            get {
                return ResourceManager.GetString("PropDisp_TemplateName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text Resource Id.
        /// </summary>
        public static string PropDisp_TextResourceId {
            get {
                return ResourceManager.GetString("PropDisp_TextResourceId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tile Distance.
        /// </summary>
        public static string PropDisp_TileDistance {
            get {
                return ResourceManager.GetString("PropDisp_TileDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trigger Period.
        /// </summary>
        public static string PropDisp_TriggerPeriod {
            get {
                return ResourceManager.GetString("PropDisp_TriggerPeriod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type Name.
        /// </summary>
        public static string PropDisp_TypeName {
            get {
                return ResourceManager.GetString("PropDisp_TypeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not Unlocked Event.
        /// </summary>
        public static string PropDisp_UnlockableDoor_NotUnlockedEvent {
            get {
                return ResourceManager.GetString("PropDisp_UnlockableDoor_NotUnlockedEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required Key.
        /// </summary>
        public static string PropDisp_UnlockableDoor_RequiredKeyItemName {
            get {
                return ResourceManager.GetString("PropDisp_UnlockableDoor_RequiredKeyItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unlocked Event.
        /// </summary>
        public static string PropDisp_UnlockableDoor_UnlockedEvent {
            get {
                return ResourceManager.GetString("PropDisp_UnlockableDoor_UnlockedEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Area.
        /// </summary>
        public static string PropDisp_UseArea {
            get {
                return ResourceManager.GetString("PropDisp_UseArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Template.
        /// </summary>
        public static string PropDisp_UseTemplate {
            get {
                return ResourceManager.GetString("PropDisp_UseTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Volumne.
        /// </summary>
        public static string PropDisp_Volumne {
            get {
                return ResourceManager.GetString("PropDisp_Volumne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quest Name.
        /// </summary>
        public static string PropDisp_WantedSignPost_QuestName {
            get {
                return ResourceManager.GetString("PropDisp_WantedSignPost_QuestName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waypoint Description.
        /// </summary>
        public static string PropDisp_WaypointDescription {
            get {
                return ResourceManager.GetString("PropDisp_WaypointDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you really wish to remove the selected Layer &apos;{0}&apos; of Floor &apos;{1}&apos;? This can&apos;t be undone..
        /// </summary>
        public static string Qeestion_ReallyRemoveLayerXOfFloorY {
            get {
                return ResourceManager.GetString("Qeestion_ReallyRemoveLayerXOfFloorY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you really wish to fill the Layer &apos;{0}&apos; of Floor &apos;{1}&apos; with the &apos;{2}&apos; Sprite (index=&apos;{3}&apos;). This can&apos;t be undone..
        /// </summary>
        public static string Question_ReallyFillLayerXOfFloorYWithSpriteZIndexW {
            get {
                return ResourceManager.GetString("Question_ReallyFillLayerXOfFloorYWithSpriteZIndexW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you really wish to remove the floor &apos;{0}&apos; from the tile map?
        ///This can&apos;t be undone..
        /// </summary>
        public static string Question_ReallyRemoveFloorX {
            get {
                return ResourceManager.GetString("Question_ReallyRemoveFloorX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you really wish to remove the selected event trigger &apos;{0}&apos;?.
        /// </summary>
        public static string Question_ReallyRemoveSelectedEventTriggerX {
            get {
                return ResourceManager.GetString("Question_ReallyRemoveSelectedEventTriggerX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you really wish to remove the selected event &apos;{0}&apos;?.
        /// </summary>
        public static string Question_ReallyRemoveSelectedEventX {
            get {
                return ResourceManager.GetString("Question_ReallyRemoveSelectedEventX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you really wish to remove the selected object &apos;{0}&apos;?.
        /// </summary>
        public static string Question_ReallyRemoveSelectedObjectX {
            get {
                return ResourceManager.GetString("Question_ReallyRemoveSelectedObjectX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you really wish to reset the selected Path &apos;{0}&apos;?.
        /// </summary>
        public static string Question_ReallyResetSelectedPathX {
            get {
                return ResourceManager.GetString("Question_ReallyResetSelectedPathX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you wish to save the currently open Scene?.
        /// </summary>
        public static string Question_SaveTheOpenScene {
            get {
                return ResourceManager.GetString("Question_SaveTheOpenScene", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event.
        /// </summary>
        public static string TabHeader_Event {
            get {
                return ResourceManager.GetString("TabHeader_Event", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General.
        /// </summary>
        public static string TabHeader_General {
            get {
                return ResourceManager.GetString("TabHeader_General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object.
        /// </summary>
        public static string TabHeader_Object {
            get {
                return ResourceManager.GetString("TabHeader_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Story.
        /// </summary>
        public static string TabHeader_Story {
            get {
                return ResourceManager.GetString("TabHeader_Story", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tile.
        /// </summary>
        public static string TabHeader_Tile {
            get {
                return ResourceManager.GetString("TabHeader_Tile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waypoint.
        /// </summary>
        public static string TabHeader_Waypoint {
            get {
                return ResourceManager.GetString("TabHeader_Waypoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Light Off.
        /// </summary>
        public static string Text_LightOff {
            get {
                return ResourceManager.GetString("Text_LightOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Light On.
        /// </summary>
        public static string Text_LightOn {
            get {
                return ResourceManager.GetString("Text_LightOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The AmbientColor setting has only effect in Indoor-Scenes..
        /// </summary>
        public static string ToolTip_AmbientColor {
            get {
                return ResourceManager.GetString("ToolTip_AmbientColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The music that is played in the background of the Scene. The current track is selected randomly..
        /// </summary>
        public static string ToolTip_BackgroundMusic {
            get {
                return ResourceManager.GetString("ToolTip_BackgroundMusic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fills the currently selected Layer with the currently selected Sprite..
        /// </summary>
        public static string ToolTip_FillLayer {
            get {
                return ResourceManager.GetString("ToolTip_FillLayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the currently selected Layer. This field is optional..
        /// </summary>
        public static string ToolTip_LayerName {
            get {
                return ResourceManager.GetString("ToolTip_LayerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SpriteSheet is responsible for converting the data of the Layer into actual Sprites.
        ///This field must be set..
        /// </summary>
        public static string ToolTip_LayerSpriteSheet {
            get {
                return ResourceManager.GetString("ToolTip_LayerSpriteSheet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This field indicates whether the currently selected Layer is visible..
        /// </summary>
        public static string ToolTip_LayerVisability {
            get {
                return ResourceManager.GetString("ToolTip_LayerVisability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the scene. The scene is saved under its name..
        /// </summary>
        public static string ToolTip_SceneName {
            get {
                return ResourceManager.GetString("ToolTip_SceneName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of a scene has various effects.
        ///Outdoor-Scenes have a Day/Night - Cycle and Weather.
        ///Indoor-Scenes use the AmbientColor setting and show no Weather..
        /// </summary>
        public static string ToolTip_SceneType {
            get {
                return ResourceManager.GetString("ToolTip_SceneType", resourceCulture);
            }
        }
    }
}
