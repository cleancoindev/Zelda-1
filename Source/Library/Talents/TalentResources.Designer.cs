//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Zelda.Talents {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class TalentResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TalentResources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Zelda.Talents.TalentResources", typeof(TalentResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gives a {0}% chance when attacked to increase
        ///damage done by {2}%, armor by {3}% 
        ///and magic-find by {4}% for {1} seconds. ähnelt.
        /// </summary>
        internal static string TD_AngelsEmbracement {
            get {
                return ResourceManager.GetString("TD_AngelsEmbracement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Increases the maximum number of new Firewhirls
        ///a Firewhirl might split upon impact by {0}. ähnelt.
        /// </summary>
        internal static string TD_AppliedImpactResearch {
            get {
                return ResourceManager.GetString("TD_AppliedImpactResearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You gain a {0}% chance to unleash a Multi Shot
        ///when you shoot a normal arrow. ähnelt.
        /// </summary>
        internal static string TD_ArrowRush {
            get {
                return ResourceManager.GetString("TD_ArrowRush", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unleashes a Multi Shot every {0} seconds
        ///for {1} seconds. ähnelt.
        /// </summary>
        internal static string TD_ArrowShower {
            get {
                return ResourceManager.GetString("TD_ArrowShower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Instantly bashes the enemy with full power.
        ///Does (MeleeDamage + {0}) x {1}% damage. ähnelt.
        /// </summary>
        internal static string TD_Bash {
            get {
                return ResourceManager.GetString("TD_Bash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die By improving your battle awareness you
        ///increase your chance to parry melee attacks.
        ///(Parry + {0}) * {1}% ähnelt.
        /// </summary>
        internal static string TD_BattleAwareness {
            get {
                return ResourceManager.GetString("TD_BattleAwareness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You roar to increase your valor.
        ///Increases (Strength + {0}) * {1}% for 60 seconds. ähnelt.
        /// </summary>
        internal static string TD_BattleShout {
            get {
                return ResourceManager.GetString("TD_BattleShout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You go nuts after using Whirlwind, turning for
        ///another {0} times, dealing (MeleeDamage x {1}%) 
        ///non-parry nor dodgeable damage. {2} sec duration. ähnelt.
        /// </summary>
        internal static string TD_Bladestorm {
            get {
                return ResourceManager.GetString("TD_Bladestorm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Firewhirl also burns the target for {0}% to {1}%
        ///fire damage over {2} seconds. ähnelt.
        /// </summary>
        internal static string TD_CorrosiveFire {
            get {
                return ResourceManager.GetString("TD_CorrosiveFire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You counter your enemy with an un-parryable
        ///attack after parrying an attack yourself.
        ///Deals (MeleeDamage x {0}%). {1} seconds cooldown. ähnelt.
        /// </summary>
        internal static string TD_CounterAttack {
            get {
                return ResourceManager.GetString("TD_CounterAttack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You learn to keep your combat balance
        ///even in the most critical situations. 
        ///Increases damage done with critical attacks by {0}%. ähnelt.
        /// </summary>
        internal static string TD_CriticalBalance {
            get {
                return ResourceManager.GetString("TD_CriticalBalance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}% chance to attack twice instead of once
        ///on a normal melee attack. Can proc off of itself. ähnelt.
        /// </summary>
        internal static string TD_DoubleAttack {
            get {
                return ResourceManager.GetString("TD_DoubleAttack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}% chance to enrage after getting attacked.
        ///Increases melee damage dealt
        ///by {1}% for {2} seconds. ähnelt.
        /// </summary>
        internal static string TD_Enrage {
            get {
                return ResourceManager.GetString("TD_Enrage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plants a powerful bomb that deals
        ///({0}% Ranged + {1}% Magic)
        ///fire area-damage. ähnelt.
        /// </summary>
        internal static string TD_FireBomb {
            get {
                return ResourceManager.GetString("TD_FireBomb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Increases the number of bombs before the cooldown
        ///is triggered by {0}. Increases cooldown by {1} seconds.
        ///Reduces mana cost. ähnelt.
        /// </summary>
        internal static string TD_FireBombChain {
            get {
                return ResourceManager.GetString("TD_FireBombChain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Casts a vortex of fire that deals 100% fire damage and
        ///gains {0}% in size and strength every 0.5 seconds.
        ///Sucks nearby enemies into it. {1} seconds cast time.
        ///{2} seconds cooldown. ähnelt.
        /// </summary>
        internal static string TD_Firevortex {
            get {
                return ResourceManager.GetString("TD_Firevortex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Casts a wall of fire next to you that deals {0}% to {1}% fire damage. 
        ///{2} secs cooldown after casting {3} times. {4} sec cast time. Pushback. ähnelt.
        /// </summary>
        internal static string TD_Firewall {
            get {
                return ResourceManager.GetString("TD_Firewall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Casts a small whirl of fire that deals
        ///{0}% - {1}% fire damage.
        ///{2} secs cast time. {3} secs cooldown. ähnelt.
        /// </summary>
        internal static string TD_Firewhirl {
            get {
                return ResourceManager.GetString("TD_Firewhirl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Summons {0} wave(s) of fire directly from the underworld.
        ///Targets that are hit take {1}% to {2}% fire damage.
        ///{3} secs cooldown. {4} secs cast time. ähnelt.
        /// </summary>
        internal static string TD_FlamesOfPhlegethon {
            get {
                return ResourceManager.GetString("TD_FlamesOfPhlegethon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You go frenzy after dealing a melee Crit.
        ///Increases melee attack speed by {0}%
        ///for {1} seconds. ähnelt.
        /// </summary>
        internal static string TD_Frenzy {
            get {
                return ResourceManager.GetString("TD_Frenzy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Increases chance to get a Double Attack by {0}% for
        ///{1} seconds. But frustrated as you are there exists
        ///a {2}% chance to hit yourself for {3}% MeleeDamage. ähnelt.
        /// </summary>
        internal static string TD_Frustration {
            get {
                return ResourceManager.GetString("TD_Frustration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You show the true fury inside you,
        ///increasing melee attack speed
        ///by {0}% for {1} seconds. ähnelt.
        /// </summary>
        internal static string TD_Furor {
            get {
                return ResourceManager.GetString("TD_Furor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Increases chance to Crit by {0}
        ///each ranged hit.
        ///The bonus resets on the first crit. ähnelt.
        /// </summary>
        internal static string TD_GoForTheHead {
            get {
                return ResourceManager.GetString("TD_GoForTheHead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Increases Dexterity by {0}% of Agility. ähnelt.
        /// </summary>
        internal static string TD_HandEyeCoordination {
            get {
                return ResourceManager.GetString("TD_HandEyeCoordination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You aim for the head after landing a critical hit,
        ///firing a swift partially armor-ignoring arrow that 
        ///has an improved chance to crit and pierce of {0}%. ähnelt.
        /// </summary>
        internal static string TD_Headshot {
            get {
                return ResourceManager.GetString("TD_Headshot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die By studying the properties of matter you
        ///gain a {0}% chance for Firewhirl to split
        ///into {1} to {2} new Firewhirls upon impact. ähnelt.
        /// </summary>
        internal static string TD_ImpactTheory {
            get {
                return ResourceManager.GetString("TD_ImpactTheory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Increases chance to crit with Bash by {0}. ähnelt.
        /// </summary>
        internal static string TD_ImprovedBash {
            get {
                return ResourceManager.GetString("TD_ImprovedBash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reduces the cooldown of the Multi Shot skill
        ///by {0} seconds. ähnelt.
        /// </summary>
        internal static string TD_ImprovedMultiShot {
            get {
                return ResourceManager.GetString("TD_ImprovedMultiShot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Instantly releases a Light arrow.
        ///Does (RangedDamage + MagicDamage + {0}) x {1}%
        ///Light damage. ähnelt.
        /// </summary>
        internal static string TD_LightArrow {
            get {
                return ResourceManager.GetString("TD_LightArrow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Increases your Magic Find value by {0}%. ähnelt.
        /// </summary>
        internal static string TD_LuckyBastard {
            get {
                return ResourceManager.GetString("TD_LuckyBastard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You try to find the right balance
        ///between the different elements.
        ///Increases Critical Strike Bonus of all spells by {0}%. ähnelt.
        /// </summary>
        internal static string TD_MagicalBalance {
            get {
                return ResourceManager.GetString("TD_MagicalBalance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You gain a {0}% chance when attacked to
        ///surround yourself with a perfect hull of mana;
        ///regenerating {1}% of base mana over {2} seconds. ähnelt.
        /// </summary>
        internal static string TD_ManaHull {
            get {
                return ResourceManager.GetString("TD_ManaHull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You improve your meditation techniques.
        ///Increases Mana Regeneration
        ///by {0} + {1}%. ähnelt.
        /// </summary>
        internal static string TD_Meditation {
            get {
                return ResourceManager.GetString("TD_Meditation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Instantly releases {0} arrows.
        ///Each arrow does {1}% RangedDamage. ähnelt.
        /// </summary>
        internal static string TD_MultiShot {
            get {
                return ResourceManager.GetString("TD_MultiShot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Increases the chance of arrows to
        ///pierce through the enemy by {0}%. ähnelt.
        /// </summary>
        internal static string TD_PiercingArrows {
            get {
                return ResourceManager.GetString("TD_PiercingArrows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Increases the chance to crit with Firewall and
        ///Flames of Phlegethon by {0}%. ähnelt.
        /// </summary>
        internal static string TD_PiercingFire {
            get {
                return ResourceManager.GetString("TD_PiercingFire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fires an arrow that deals (RangedDamage x {0}) instantly,
        ///((Ranged + Magic)Damage x {1}) nature damage
        ///over {2} seconds; slowing the target by {3}%.
        ///{4} seconds cooldown. ähnelt.
        /// </summary>
        internal static string TD_PoisonedShot {
            get {
                return ResourceManager.GetString("TD_PoisonedShot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Studying the properties of poisoned herbs
        ///allows you to increase your damage done
        ///with poisons by {0}%. ähnelt.
        /// </summary>
        internal static string TD_PoisonMastery {
            get {
                return ResourceManager.GetString("TD_PoisonMastery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Improves the effectiveness of healing and
        ///mana potions by {0}%. ähnelt.
        /// </summary>
        internal static string TD_PotionMastery {
            get {
                return ResourceManager.GetString("TD_PotionMastery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pushes the enemy, dealing MeleeDamage,
        ///with an increased pushing power of &apos;{0}&apos; to &apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string TD_PushingAttack {
            get {
                return ResourceManager.GetString("TD_PushingAttack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reduces the cooldown of all offensive Fire spells
        ///by {0}% for {1} seconds. {2} seconds cooldown. ähnelt.
        /// </summary>
        internal static string TD_Pyromania {
            get {
                return ResourceManager.GetString("TD_Pyromania", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Increases Attack Speed and Spell Haste by {0}%. ähnelt.
        /// </summary>
        internal static string TD_QuickHands {
            get {
                return ResourceManager.GetString("TD_QuickHands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die                  Requires a Dagger to be used!
        ///Swiftly strikes at the enemy dealing MeleeDamage. 
        ///Can proc Double Attack. Cooldown of {0} seconds. ähnelt.
        /// </summary>
        internal static string TD_QuickStrike {
            get {
                return ResourceManager.GetString("TD_QuickStrike", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You ensure that your enemy has to suffer greatly;
        ///by increasing damage dealt with
        ///Damage Over Time effects by {0}%. ähnelt.
        /// </summary>
        internal static string TD_RackingPains {
            get {
                return ResourceManager.GetString("TD_RackingPains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die By using your inner rage you increase
        ///your ranged attack speed by {0}% and your
        ///chance to pierce by {1}% for {2} seconds. ähnelt.
        /// </summary>
        internal static string TD_RapidFire {
            get {
                return ResourceManager.GetString("TD_RapidFire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You learn to control the winds around a Firevortex.
        ///Increases the chance of the vortex
        ///to pierce through targets by {0}%. ähnelt.
        /// </summary>
        internal static string TD_RazorWinds {
            get {
                return ResourceManager.GetString("TD_RazorWinds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You recover from battle,
        ///increasing Life Regeneration by {0}%
        ///for {1} seconds. ähnelt.
        /// </summary>
        internal static string TD_RecoverWounds {
            get {
                return ResourceManager.GetString("TD_RecoverWounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You gain a {0}% chance on physical melee or
        ///ranged strike to heal self for {1}% of damage done. ähnelt.
        /// </summary>
        internal static string TD_RevitalizingStrikes {
            get {
                return ResourceManager.GetString("TD_RevitalizingStrikes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You train your skills in the weapons of a rogue,
        ///increasing damage done with bows by {0}%
        ///and damage done with daggers by {1}%. ähnelt.
        /// </summary>
        internal static string TD_RogueWeaponMastery {
            get {
                return ResourceManager.GetString("TD_RogueWeaponMastery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Increases Chance to Block by {0} for {1} seconds.
        ///{2} seconds cooldown. ähnelt.
        /// </summary>
        internal static string TD_ShieldBlock {
            get {
                return ResourceManager.GetString("TD_ShieldBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You build up strength in your sword arm after blocking an attack.
        ///Unleashes MeleeDmg + BlockValue * (100 + {0} * Block Points)% damage. 
        ///1 Block Point is awarded for each block; lasting {1} seconds. 
        ///{2} Block Points maximum. Ignores enemy armor. ähnelt.
        /// </summary>
        internal static string TD_ShieldBreaker {
            get {
                return ResourceManager.GetString("TD_ShieldBreaker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Increases Chance to Block by {0} and Block Value by {1}%. ähnelt.
        /// </summary>
        internal static string TD_ShieldMastery {
            get {
                return ResourceManager.GetString("TD_ShieldMastery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reduces physical damage taken by {0}%.
        ///As a penalty also reduces damage done
        ///by {1}% and movement speed by {2}%. ähnelt.
        /// </summary>
        internal static string TD_ShieldWall {
            get {
                return ResourceManager.GetString("TD_ShieldWall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You decide to always keep your jewelry shiny!
        ///Increases the amount of stats rings and
        ///necklaces give by {0}%. ähnelt.
        /// </summary>
        internal static string TD_SmoothedEmblazonment {
            get {
                return ResourceManager.GetString("TD_SmoothedEmblazonment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Increases movement speed by {0}%
        ///for {1} seconds. ähnelt.
        /// </summary>
        internal static string TD_Sprint {
            get {
                return ResourceManager.GetString("TD_Sprint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Increases {0} by {1} + {2}%. ähnelt.
        /// </summary>
        internal static string TD_StatRoot {
            get {
                return ResourceManager.GetString("TD_StatRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You gain swiftness by adjusting your fight style.
        ///Reduces the cooldown of Bash and Light Arrow by {0} seconds
        ///and the cooldown of Quick Strike and Firewhirl by {1} seconds. ähnelt.
        /// </summary>
        internal static string TD_SwiftFightStyle {
            get {
                return ResourceManager.GetString("TD_SwiftFightStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hard training allows you to
        ///increase your Vitality by {0}%. ähnelt.
        /// </summary>
        internal static string TD_Vitality {
            get {
                return ResourceManager.GetString("TD_Vitality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You spin with your sword, dealing
        ///(MeleeDamage x {0}%) non-parry nor dodgeable
        ///damage. {1} sec cooldown. {2} sec duration. ähnelt.
        /// </summary>
        internal static string TD_Whirlwind {
            get {
                return ResourceManager.GetString("TD_Whirlwind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Agility Training ähnelt.
        /// </summary>
        internal static string TN_AgilityTraining {
            get {
                return ResourceManager.GetString("TN_AgilityTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Angel&apos;s Embracement ähnelt.
        /// </summary>
        internal static string TN_AngelEmbracement {
            get {
                return ResourceManager.GetString("TN_AngelEmbracement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Applied Impact Research ähnelt.
        /// </summary>
        internal static string TN_AppliedImpactResearch {
            get {
                return ResourceManager.GetString("TN_AppliedImpactResearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Arrow Rush ähnelt.
        /// </summary>
        internal static string TN_ArrowRush {
            get {
                return ResourceManager.GetString("TN_ArrowRush", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Arrow Shower ähnelt.
        /// </summary>
        internal static string TN_ArrowShower {
            get {
                return ResourceManager.GetString("TN_ArrowShower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bash ähnelt.
        /// </summary>
        internal static string TN_Bash {
            get {
                return ResourceManager.GetString("TN_Bash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Battle Awareness ähnelt.
        /// </summary>
        internal static string TN_BattleAwareness {
            get {
                return ResourceManager.GetString("TN_BattleAwareness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Battle Shout ähnelt.
        /// </summary>
        internal static string TN_BattleShout {
            get {
                return ResourceManager.GetString("TN_BattleShout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bladestorm ähnelt.
        /// </summary>
        internal static string TN_Bladestorm {
            get {
                return ResourceManager.GetString("TN_Bladestorm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Corrosive Fire ähnelt.
        /// </summary>
        internal static string TN_CorrosiveFire {
            get {
                return ResourceManager.GetString("TN_CorrosiveFire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Concentrate on the Facts ähnelt.
        /// </summary>
        internal static string TN_CotF {
            get {
                return ResourceManager.GetString("TN_CotF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Counter Attack ähnelt.
        /// </summary>
        internal static string TN_CounterAttack {
            get {
                return ResourceManager.GetString("TN_CounterAttack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Critical Balance ähnelt.
        /// </summary>
        internal static string TN_CriticalBalance {
            get {
                return ResourceManager.GetString("TN_CriticalBalance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dodge Training ähnelt.
        /// </summary>
        internal static string TN_DodgeTraining {
            get {
                return ResourceManager.GetString("TN_DodgeTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Double Attack ähnelt.
        /// </summary>
        internal static string TN_DoubleAttack {
            get {
                return ResourceManager.GetString("TN_DoubleAttack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enrage ähnelt.
        /// </summary>
        internal static string TN_Enrage {
            get {
                return ResourceManager.GetString("TN_Enrage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fire Bomb ähnelt.
        /// </summary>
        internal static string TN_FireBomb {
            get {
                return ResourceManager.GetString("TN_FireBomb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bomb Chain ähnelt.
        /// </summary>
        internal static string TN_FireBombChain {
            get {
                return ResourceManager.GetString("TN_FireBombChain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Firevortex ähnelt.
        /// </summary>
        internal static string TN_Firevortex {
            get {
                return ResourceManager.GetString("TN_Firevortex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Firewall ähnelt.
        /// </summary>
        internal static string TN_Firewall {
            get {
                return ResourceManager.GetString("TN_Firewall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Firewhirl ähnelt.
        /// </summary>
        internal static string TN_Firewhirl {
            get {
                return ResourceManager.GetString("TN_Firewhirl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Flames of Phlegethon ähnelt.
        /// </summary>
        internal static string TN_FlamesOfPhlegethon {
            get {
                return ResourceManager.GetString("TN_FlamesOfPhlegethon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Frenzy ähnelt.
        /// </summary>
        internal static string TN_Frenzy {
            get {
                return ResourceManager.GetString("TN_Frenzy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Frustration ähnelt.
        /// </summary>
        internal static string TN_Frustration {
            get {
                return ResourceManager.GetString("TN_Frustration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Furor ähnelt.
        /// </summary>
        internal static string TN_Furor {
            get {
                return ResourceManager.GetString("TN_Furor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Go for the Head ähnelt.
        /// </summary>
        internal static string TN_GoForTheHead {
            get {
                return ResourceManager.GetString("TN_GoForTheHead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hand - Eye Coordination ähnelt.
        /// </summary>
        internal static string TN_HandEyeCoordination {
            get {
                return ResourceManager.GetString("TN_HandEyeCoordination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Headshot ähnelt.
        /// </summary>
        internal static string TN_Headshot {
            get {
                return ResourceManager.GetString("TN_Headshot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Impact Theory ähnelt.
        /// </summary>
        internal static string TN_ImpactTheory {
            get {
                return ResourceManager.GetString("TN_ImpactTheory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Improved Bash ähnelt.
        /// </summary>
        internal static string TN_ImprovedBash {
            get {
                return ResourceManager.GetString("TN_ImprovedBash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Improved Multi Shot ähnelt.
        /// </summary>
        internal static string TN_ImprovedMultiShot {
            get {
                return ResourceManager.GetString("TN_ImprovedMultiShot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Light Arrow ähnelt.
        /// </summary>
        internal static string TN_LightArrow {
            get {
                return ResourceManager.GetString("TN_LightArrow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lucky Bastard ähnelt.
        /// </summary>
        internal static string TN_LuckyBastard {
            get {
                return ResourceManager.GetString("TN_LuckyBastard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Magical Balance ähnelt.
        /// </summary>
        internal static string TN_MagicalBalance {
            get {
                return ResourceManager.GetString("TN_MagicalBalance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Magic Training ähnelt.
        /// </summary>
        internal static string TN_MagicTraining {
            get {
                return ResourceManager.GetString("TN_MagicTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mana Hull ähnelt.
        /// </summary>
        internal static string TN_ManaHull {
            get {
                return ResourceManager.GetString("TN_ManaHull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Meditation ähnelt.
        /// </summary>
        internal static string TN_Meditation {
            get {
                return ResourceManager.GetString("TN_Meditation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Melee Training ähnelt.
        /// </summary>
        internal static string TN_MeleeTraining {
            get {
                return ResourceManager.GetString("TN_MeleeTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Multi Shot ähnelt.
        /// </summary>
        internal static string TN_MultiShot {
            get {
                return ResourceManager.GetString("TN_MultiShot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Piercing Arrows ähnelt.
        /// </summary>
        internal static string TN_PiercingArrows {
            get {
                return ResourceManager.GetString("TN_PiercingArrows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Piercing Fire ähnelt.
        /// </summary>
        internal static string TN_PiercingFire {
            get {
                return ResourceManager.GetString("TN_PiercingFire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Poisoned Shot ähnelt.
        /// </summary>
        internal static string TN_PoisonedShot {
            get {
                return ResourceManager.GetString("TN_PoisonedShot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Poison Mastery ähnelt.
        /// </summary>
        internal static string TN_PoisonMastery {
            get {
                return ResourceManager.GetString("TN_PoisonMastery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Potion Mastery ähnelt.
        /// </summary>
        internal static string TN_PotionMastery {
            get {
                return ResourceManager.GetString("TN_PotionMastery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Push ähnelt.
        /// </summary>
        internal static string TN_PushingAttack {
            get {
                return ResourceManager.GetString("TN_PushingAttack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pyromania ähnelt.
        /// </summary>
        internal static string TN_Pyromania {
            get {
                return ResourceManager.GetString("TN_Pyromania", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quick Hands ähnelt.
        /// </summary>
        internal static string TN_QuickHands {
            get {
                return ResourceManager.GetString("TN_QuickHands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quick Strike ähnelt.
        /// </summary>
        internal static string TN_QuickStrike {
            get {
                return ResourceManager.GetString("TN_QuickStrike", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Racking Pains ähnelt.
        /// </summary>
        internal static string TN_RackingPains {
            get {
                return ResourceManager.GetString("TN_RackingPains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ranged Training ähnelt.
        /// </summary>
        internal static string TN_RangedTraining {
            get {
                return ResourceManager.GetString("TN_RangedTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rapid Fire ähnelt.
        /// </summary>
        internal static string TN_RapidFire {
            get {
                return ResourceManager.GetString("TN_RapidFire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Razor Winds ähnelt.
        /// </summary>
        internal static string TN_RazorWinds {
            get {
                return ResourceManager.GetString("TN_RazorWinds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Recover Wounds ähnelt.
        /// </summary>
        internal static string TN_RecoverWounds {
            get {
                return ResourceManager.GetString("TN_RecoverWounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Revitalizing Strikes ähnelt.
        /// </summary>
        internal static string TN_RevitalizingStrikes {
            get {
                return ResourceManager.GetString("TN_RevitalizingStrikes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rogue Weapon Mastery ähnelt.
        /// </summary>
        internal static string TN_RogueWeaponMastery {
            get {
                return ResourceManager.GetString("TN_RogueWeaponMastery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shield Block ähnelt.
        /// </summary>
        internal static string TN_ShieldBlock {
            get {
                return ResourceManager.GetString("TN_ShieldBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shield Breaker ähnelt.
        /// </summary>
        internal static string TN_ShieldBreaker {
            get {
                return ResourceManager.GetString("TN_ShieldBreaker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shield Mastery ähnelt.
        /// </summary>
        internal static string TN_ShieldMastery {
            get {
                return ResourceManager.GetString("TN_ShieldMastery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shield Wall ähnelt.
        /// </summary>
        internal static string TN_ShieldWall {
            get {
                return ResourceManager.GetString("TN_ShieldWall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Smoothed Emblazonment ähnelt.
        /// </summary>
        internal static string TN_SmoothedEmblazonment {
            get {
                return ResourceManager.GetString("TN_SmoothedEmblazonment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sprint ähnelt.
        /// </summary>
        internal static string TN_Sprint {
            get {
                return ResourceManager.GetString("TN_Sprint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Swift Fight Style ähnelt.
        /// </summary>
        internal static string TN_SwiftFightStyle {
            get {
                return ResourceManager.GetString("TN_SwiftFightStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Toughness ähnelt.
        /// </summary>
        internal static string TN_Toughness {
            get {
                return ResourceManager.GetString("TN_Toughness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Vitality ähnelt.
        /// </summary>
        internal static string TN_Vitality {
            get {
                return ResourceManager.GetString("TN_Vitality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whirlwind ähnelt.
        /// </summary>
        internal static string TN_Whirlwind {
            get {
                return ResourceManager.GetString("TN_Whirlwind", resourceCulture);
            }
        }
    }
}
